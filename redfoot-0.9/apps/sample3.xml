<r:module name="sample3" xmlns:r="http://redfoot.sourceforge.net/2001/01/">

import string
import sys

from rdf.query import Query
from rdf.const import *
from rdf.literal import *

from redfoot.modules.common import Common
from redfoot.modules.neighbours import Neighbours
from redfoot.modules.rss import RSS

<r:class name="UI" bases="RSS Common Neighbours">

def __init__(self, rednode):
    self.rednode = rednode
    RSS.__init__(self, rednode)
    #Common.__init__(self, rednode)


def handle_request(self, request, response):
    # For now, write log to stderr.
    path_info = request.getPathInfo()
    sys.stderr.write(path_info+"\n")
    sys.stderr.flush()

    # invoke the processor
    processor = request.getParameters()['processor']

    if hasattr(self, processor):
        apply(getattr(self, processor), (request, response))

    self.page(request, response, self.content)

        
def content(self, request, response):
    path_info = request.getPathInfo()
    if hasattr(self, path_info):
        apply(getattr(self, path_info), (request, response))
        return

# TODO: rss currently depends on this.
def authorized(self):
    return 1

<r:response name="/">
<r:exec>self.rss(request, response)</r:exec>
</r:response>


<r:response name="page" args="content=None">
<HTML>
  <HEAD>
    <TITLE>Redfoot Sample 3</TITLE>
  </HEAD>
  <BODY>

    <DIV CLASS="nav">
      <TABLE WIDTH="100%">
        <TR>
          <TD><A HREF="/">Home</A></TD>
        </TR>
      </TABLE>
    </DIV>
      
    <H1>Redfoot Sample 3</H1>

    <r:exec>if content: content(request, response)</r:exec>

  </BODY>
</HTML>
</r:response>

</r:class>

</r:module>
