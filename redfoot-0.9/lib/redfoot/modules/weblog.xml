<r:module name="weblog" xmlns:r="http://redfoot.sourceforge.net/2001/01/">

NEWS_ITEM = "http://eikeon.com/2000/11/2001/03/25/T04/01/41Z"
BY = "http://eikeon.com/2000/11/2001/03/25/T04/19/34Z"

AUDIENCE = "http://eikeon.com/2001/03/26/T01/17/46Z"
INTENDED_AUDIENCE = "http://eikeon.com/2001/03/26/T01/21/06Z"

PUBLIC = "http://eikeon.com/2001/03/26/T03/09/54Z"

CREATED = "http://eikeon.com/2000/11/2001/03/25/T00/34/45Z"

<r:class name="Weblog">

def news(self, request, response):
    self.subclass(request, response, NEWS_ITEM, self.news_row, sort=self.reverse_chron, filter=self.news_filter)





def news_filter(self, subject):
    uri = self.get_uri()
    if uri:
        if self.rednode.getFirst(subject[0], BY, uri):
            return 0
        list = self.rednode.get(subject[0], INTENDED_AUDIENCE, None)
        for ia in list:

            if uri==ia[2] or self.is_instance_of(uri, ia[2]):
                return 0
    else:
        if self.rednode.getFirst(subject[0], INTENDED_AUDIENCE, PUBLIC):
            return 0
    return 1


<r:response name="news_row" args="triple row">
<r:exec>
if row % 2 == 0:
    color = 'DDDDFF'
else:
    color = 'DDFFDD'
color = 'FFFFFF'
</r:exec>
<dl class="news" style="margin: 0px; padding: 2px 5px; background: #{color};">
<dt style="padding: 0px; margin: 0px;">
      <r:eval>self.get_property_value(triple[0], LABEL, '')</r:eval>
</dt>
<dd style="xmargin-bottom: 5px;font-size: 8pt;">
  by
<r:exec>
who = self.rednode.getFirst(triple[0], BY, None)[2]
username = self.get_property_value(who, LABEL, '')
</r:exec>
<r:eval>username</r:eval>
  on
<r:eval>self.get_property_value(triple[0], CREATED, '')</r:eval>
</dd>
<dd xstyle="padding-bottom: 10px">
 <p>
  <r:eval>self.get_property_value(triple[0], COMMENT, '')</r:eval>
 </p>
</dd>
</dl>
</r:response>


<r:response name="create_news_item_page">
  <DIV class="content_area">
    <FORM name="main" action="/" method="POST" style="margin: 0">
      <TABLE>
        <TR>
          <TD>Title:</TD>
          <TD><INPUT name="title" type="text" size="40"/></TD>
        </TR>
        <TR>
          <TD>Body:</TD>
          <TD><textarea name="body" ROWS="6" COLS="40"/>
          </TD>
        </TR>
        <TR>
          <TD>Intended Audience:</TD>
          <TD>
            <SELECT name="intended_audience">
            <r:exec>self.option(request, response, EIKEON)</r:exec> 
            </SELECT>
          </TD>
        </TR>
        <TR>
          <TD align="right">
            <INPUT value="Create News Item" type="submit"/>
          </TD>
          <TD align="left"> 
            <INPUT value="Cancel" type="reset"/>
          </TD>
        </TR>
      </TABLE>
      <INPUT name="processor" value="create_news_item" type="hidden"/>
    </FORM>
  </DIV>
</r:response>


<r:response name="option" args="subject=None">
    <option value="{subject}">
      <r:eval>self.rednode.label(subject)</r:eval>
    </option>
</r:response>

def create_news_item(self, request, response):
    # TODO:
    #session_uri = 
    parameters = request.getParameters()

    uri = self.rednode.local.URI + generateURI()

    self.rednode.local.add(uri, TYPE, NEWS_ITEM)
    self.rednode.local.add(uri, LABEL, literal(parameters['title']))
    self.rednode.local.add(uri, COMMENT, literal(parameters['body']))    
    self.rednode.local.add(uri, INTENDED_AUDIENCE, parameters['intended_audience'])    

    time = date_time()
    self.rednode.local.add(uri, CREATED, literal(time))

    self.rednode.local.add(uri, BY, session_uri())    

<r:response name="/news">
    <dl class="content_area" style="padding: 0px;">

<r:exec>
triples = self.get_instances_of(NEWS_ITEM)
triples = filter_triples(triples, self.news_filter)
triples.sort(self.reverse_chron)
triples = triples[0:5]

self.list(request, response, triples, self.news_row)
</r:exec>

    </dl>    
</r:response>




</r:class>

</r:module>