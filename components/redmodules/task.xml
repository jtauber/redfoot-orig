<red:code xmlns:red="http://redfoot.sourceforge.net/2001/06/">

  from redfoot.rdf.const import LABEL, TYPE, COMMENT
  from redfoot.rdf.objects import resource, literal
  from redfoot.rdf.store.urigen import generate_uri
  from redfoot.util import encode_URI

  from redfoot.rdf.query.functors import sort

  TASK = resource("http://redfoot.sourceforge.net/2001/06/task")

  <red:module name="Task">

    def alpha_by_label(self, (s1, p1, o1), (s2, p2, o2)):
        label_a = self.app.rednode.label(s1)
        label_b = self.app.rednode.label(s2)
        return cmp(str(label_a), str(label_b))

    <red:facet name="">    
      <red:exec>self.task_list()</red:exec>
    </red:facet>

    <red:facet name="task_list">    
      <TABLE>
       <red:visit visit="sort(self.alpha_by_label, self.app.rednode.visit)" 
                  args="(None, TYPE, TASK)">
         <red:callback args="subject, property, object">
        <TR>
          <TD>
            <A href="edit?subject={subject}">
              <red:eval>self.app.rednode.label(subject)</red:eval>
            </A>
          </TD>
          <TD>
            <FORM METHOD="POST" ACTION="">
              <INPUT TYPE="SUBMIT" VALUE="done"/>
              <INPUT TYPE="HIDDEN" NAME="task_uri" VALUE="{subject}"/>

              <input name='module_instance' 
                     type='HIDDEN' 
                     value="{self.module_instance}"/>

              <INPUT TYPE="HIDDEN" NAME="processor" VALUE="task_done"/>
            </FORM>
          </TD>
        </TR>
         </red:callback>
       </red:visit>
        <TR>
          <TD>
            <FORM NAME="task" METHOD="POST" ACTION="">
              <INPUT SIZE="30" TYPE="TEXT" NAME="new_task"/>

              <input name='module_instance' 
                     type='HIDDEN' 
                     value="{self.module_instance}"/>

              <INPUT TYPE="HIDDEN" NAME="processor" VALUE="add_task"/>
            </FORM>
          </TD>
        </TR>
      </TABLE>
    </red:facet>

    <red:facet name="edit">
      <red:exec>subject = resource(self.app.request.get_parameter('subject'))</red:exec>
      <red:exec>label = self.app.rednode.get_first_value(subject, LABEL, '')</red:exec>
      <red:exec>comment = self.app.rednode.get_first_value(subject, COMMENT, '')</red:exec>      
      <FORM METHOD="POST" ACTION=".">
        <TABLE>
          <TR>
            <TD>Label:</TD>
            <TD>
              <INPUT name="label" value="{label}"
                     type="text" size="30"/>
            </TD>
          </TR>
          <TR>                      
            <TD>Description:</TD>
            <TD>
              <INPUT name="comment" value="{comment}"
                     type="text" size="30"/>
            </TD>
          </TR>
        </TABLE>
        <INPUT TYPE="SUBMIT" VALUE="update"/>
        <INPUT TYPE="HIDDEN" NAME="subject" VALUE="{subject}"/>

        <input name='module_instance' 
               type='HIDDEN' 
               value="{self.module_instance}"/>

        <INPUT TYPE="HIDDEN" NAME="processor" VALUE="do_update"/>
      </FORM>
    </red:facet>
    
    # TODO: create processor tag for these to use
    def add_task(self):
        task = self.app.request.get_parameter('new_task')    
        uri = resource(self.app.rednode.local.uri + generate_uri())
        self.app.rednode.add(uri, TYPE, TASK)
        self.app.rednode.add(uri, LABEL, literal(task))
        self.app.rednode.add(uri, COMMENT, literal(''))        

    def task_done(self):
        task_uri = self.app.request.get_parameter('task_uri')
        self.app.rednode.remove(resource(task_uri), None, None)

    def do_update(self):
        subject = resource(self.app.request.get_parameter('subject'))
        label = literal(self.app.request.get_parameter('label'))
        comment = literal(self.app.request.get_parameter('comment'))
        self.app.rednode.remove(subject, LABEL, None)
        self.app.rednode.remove(subject, COMMENT, None)
        self.app.rednode.add(subject, LABEL, label)
        self.app.rednode.add(subject, COMMENT, comment)        

  </red:module>

</red:code>

